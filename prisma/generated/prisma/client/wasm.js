
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  UserID: 'UserID',
  Name: 'Name',
  Email: 'Email',
  PasswordHash: 'PasswordHash',
  Role: 'Role',
  Year: 'Year',
  Department: 'Department',
  ProfilePicture: 'ProfilePicture',
  Bio: 'Bio',
  JoinedDate: 'JoinedDate',
  LastLogin: 'LastLogin',
  ContributionScore: 'ContributionScore',
  Status: 'Status'
};

exports.Prisma.CourseScalarFieldEnum = {
  CourseID: 'CourseID',
  CourseName: 'CourseName',
  CourseCode: 'CourseCode',
  Department: 'Department',
  Year: 'Year',
  Semester: 'Semester',
  Description: 'Description',
  Instructor: 'Instructor',
  Status: 'Status'
};

exports.Prisma.ResourceScalarFieldEnum = {
  ResourceID: 'ResourceID',
  Title: 'Title',
  Description: 'Description',
  FilePath: 'FilePath',
  FileType: 'FileType',
  FileSize: 'FileSize',
  UploadDate: 'UploadDate',
  Version: 'Version',
  DownloadCount: 'DownloadCount',
  Status: 'Status',
  LastModified: 'LastModified',
  UserID: 'UserID',
  CourseID: 'CourseID'
};

exports.Prisma.ResourceTagScalarFieldEnum = {
  ResourceID: 'ResourceID',
  Tag: 'Tag'
};

exports.Prisma.BookScalarFieldEnum = {
  BookID: 'BookID',
  Title: 'Title',
  Author: 'Author',
  Edition: 'Edition',
  Condition: 'Condition',
  AvailabilityStatus: 'AvailabilityStatus',
  ListedDate: 'ListedDate',
  UserID: 'UserID'
};

exports.Prisma.BookTransactionScalarFieldEnum = {
  TransactionID: 'TransactionID',
  Status: 'Status',
  RequestDate: 'RequestDate',
  ApprovalDate: 'ApprovalDate',
  ReturnDate: 'ReturnDate',
  TransactionType: 'TransactionType',
  UserID: 'UserID',
  BookID: 'BookID'
};

exports.Prisma.ForumScalarFieldEnum = {
  ForumID: 'ForumID',
  Title: 'Title',
  CreatedDate: 'CreatedDate',
  Status: 'Status',
  UserID: 'UserID',
  CourseID: 'CourseID'
};

exports.Prisma.DiscussionScalarFieldEnum = {
  DiscussionID: 'DiscussionID',
  Content: 'Content',
  Attachment: 'Attachment',
  Timestamp: 'Timestamp',
  Status: 'Status',
  UserID: 'UserID',
  ForumID: 'ForumID'
};

exports.Prisma.RequestScalarFieldEnum = {
  RequestID: 'RequestID',
  Description: 'Description',
  Status: 'Status',
  CreatedDate: 'CreatedDate',
  FulfilledDate: 'FulfilledDate',
  UserID: 'UserID',
  CourseID: 'CourseID'
};

exports.Prisma.RatingScalarFieldEnum = {
  UserID: 'UserID',
  ResourceID: 'ResourceID',
  RatingValue: 'RatingValue',
  Comment: 'Comment',
  Date: 'Date'
};

exports.Prisma.FlagScalarFieldEnum = {
  FlagID: 'FlagID',
  Reason: 'Reason',
  Status: 'Status',
  Date: 'Date',
  UserID: 'UserID',
  ResourceID: 'ResourceID'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Course: 'Course',
  Resource: 'Resource',
  ResourceTag: 'ResourceTag',
  Book: 'Book',
  BookTransaction: 'BookTransaction',
  Forum: 'Forum',
  Discussion: 'Discussion',
  Request: 'Request',
  Rating: 'Rating',
  Flag: 'Flag'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/shubhra/Resource-portal/prisma/generated/prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/shubhra/Resource-portal/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../../.env",
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../..",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated/prisma/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  UserID            Int       @id @default(autoincrement())\n  Name              String\n  Email             String    @unique\n  PasswordHash      String\n  Role              String\n  Year              Int?\n  Department        String?\n  ProfilePicture    String?\n  Bio               String?\n  JoinedDate        DateTime  @default(now())\n  LastLogin         DateTime?\n  ContributionScore Int       @default(0)\n  Status            String?\n\n  // Relations\n  resources    Resource[]\n  books        Book[]\n  transactions BookTransaction[]\n  forums       Forum[]\n  discussions  Discussion[]\n  requests     Request[]\n  ratings      Rating[]\n  flags        Flag[]\n}\n\nmodel Course {\n  CourseID    Int     @id @default(autoincrement())\n  CourseName  String\n  CourseCode  String  @unique\n  Department  String?\n  Year        Int?\n  Semester    Int?\n  Description String?\n  Instructor  String?\n  Status      String?\n\n  // Relations\n  resources Resource[]\n  forums    Forum[]\n  requests  Request[]\n}\n\nmodel Resource {\n  ResourceID    Int       @id @default(autoincrement())\n  Title         String\n  Description   String?\n  FilePath      String\n  FileType      String?\n  FileSize      Int?\n  UploadDate    DateTime  @default(now())\n  Version       Int?      @default(1)\n  DownloadCount Int?      @default(0)\n  Status        String?\n  LastModified  DateTime? @updatedAt\n  UserID        Int\n  CourseID      Int\n\n  // Relations\n  user    User          @relation(fields: [UserID], references: [UserID])\n  course  Course        @relation(fields: [CourseID], references: [CourseID])\n  tags    ResourceTag[]\n  ratings Rating[]\n  flags   Flag[]\n}\n\nmodel ResourceTag {\n  ResourceID Int\n  Tag        String\n\n  resource Resource @relation(fields: [ResourceID], references: [ResourceID])\n\n  @@id([ResourceID, Tag])\n}\n\nmodel Book {\n  BookID             Int      @id @default(autoincrement())\n  Title              String\n  Author             String\n  Edition            String?\n  Condition          String?\n  AvailabilityStatus String?\n  ListedDate         DateTime @default(now())\n  UserID             Int\n\n  user         User              @relation(fields: [UserID], references: [UserID])\n  transactions BookTransaction[]\n}\n\nmodel BookTransaction {\n  TransactionID   Int       @id @default(autoincrement())\n  Status          String?\n  RequestDate     DateTime  @default(now())\n  ApprovalDate    DateTime?\n  ReturnDate      DateTime?\n  TransactionType String?\n  UserID          Int\n  BookID          Int\n\n  user User @relation(fields: [UserID], references: [UserID])\n  book Book @relation(fields: [BookID], references: [BookID])\n}\n\nmodel Forum {\n  ForumID     Int      @id @default(autoincrement())\n  Title       String\n  CreatedDate DateTime @default(now())\n  Status      String?\n  UserID      Int\n  CourseID    Int\n\n  user        User         @relation(fields: [UserID], references: [UserID])\n  course      Course       @relation(fields: [CourseID], references: [CourseID])\n  discussions Discussion[]\n}\n\nmodel Discussion {\n  DiscussionID Int      @id @default(autoincrement())\n  Content      String\n  Attachment   String?\n  Timestamp    DateTime @default(now())\n  Status       String?\n  UserID       Int\n  ForumID      Int\n\n  user  User  @relation(fields: [UserID], references: [UserID])\n  forum Forum @relation(fields: [ForumID], references: [ForumID])\n}\n\nmodel Request {\n  RequestID     Int       @id @default(autoincrement())\n  Description   String\n  Status        String?\n  CreatedDate   DateTime  @default(now())\n  FulfilledDate DateTime?\n  UserID        Int\n  CourseID      Int\n\n  user   User   @relation(fields: [UserID], references: [UserID])\n  course Course @relation(fields: [CourseID], references: [CourseID])\n}\n\nmodel Rating {\n  UserID      Int\n  ResourceID  Int\n  RatingValue Int\n  Comment     String?\n  Date        DateTime @default(now())\n\n  user     User     @relation(fields: [UserID], references: [UserID])\n  resource Resource @relation(fields: [ResourceID], references: [ResourceID])\n\n  @@id([UserID, ResourceID])\n}\n\nmodel Flag {\n  FlagID     Int      @id @default(autoincrement())\n  Reason     String\n  Status     String?\n  Date       DateTime @default(now())\n  UserID     Int\n  ResourceID Int\n\n  user     User     @relation(fields: [UserID], references: [UserID])\n  resource Resource @relation(fields: [ResourceID], references: [ResourceID])\n}\n",
  "inlineSchemaHash": "0b06e665f8f512d9d04cb40b2baa07497d597725a576719121db79f191c30a14",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"UserID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"PasswordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Year\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ProfilePicture\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"JoinedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"LastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ContributionScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resources\",\"kind\":\"object\",\"type\":\"Resource\",\"relationName\":\"ResourceToUser\"},{\"name\":\"books\",\"kind\":\"object\",\"type\":\"Book\",\"relationName\":\"BookToUser\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"BookTransaction\",\"relationName\":\"BookTransactionToUser\"},{\"name\":\"forums\",\"kind\":\"object\",\"type\":\"Forum\",\"relationName\":\"ForumToUser\"},{\"name\":\"discussions\",\"kind\":\"object\",\"type\":\"Discussion\",\"relationName\":\"DiscussionToUser\"},{\"name\":\"requests\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"RequestToUser\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"RatingToUser\"},{\"name\":\"flags\",\"kind\":\"object\",\"type\":\"Flag\",\"relationName\":\"FlagToUser\"}],\"dbName\":null},\"Course\":{\"fields\":[{\"name\":\"CourseID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"CourseName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CourseCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Year\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Semester\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Instructor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resources\",\"kind\":\"object\",\"type\":\"Resource\",\"relationName\":\"CourseToResource\"},{\"name\":\"forums\",\"kind\":\"object\",\"type\":\"Forum\",\"relationName\":\"CourseToForum\"},{\"name\":\"requests\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"CourseToRequest\"}],\"dbName\":null},\"Resource\":{\"fields\":[{\"name\":\"ResourceID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"FilePath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"FileType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"FileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"UploadDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"DownloadCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"LastModified\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UserID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"CourseID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ResourceToUser\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToResource\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"ResourceTag\",\"relationName\":\"ResourceToResourceTag\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"RatingToResource\"},{\"name\":\"flags\",\"kind\":\"object\",\"type\":\"Flag\",\"relationName\":\"FlagToResource\"}],\"dbName\":null},\"ResourceTag\":{\"fields\":[{\"name\":\"ResourceID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Tag\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"object\",\"type\":\"Resource\",\"relationName\":\"ResourceToResourceTag\"}],\"dbName\":null},\"Book\":{\"fields\":[{\"name\":\"BookID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Author\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Edition\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Condition\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AvailabilityStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ListedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UserID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BookToUser\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"BookTransaction\",\"relationName\":\"BookToBookTransaction\"}],\"dbName\":null},\"BookTransaction\":{\"fields\":[{\"name\":\"TransactionID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"RequestDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ApprovalDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ReturnDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"TransactionType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"UserID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"BookID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BookTransactionToUser\"},{\"name\":\"book\",\"kind\":\"object\",\"type\":\"Book\",\"relationName\":\"BookToBookTransaction\"}],\"dbName\":null},\"Forum\":{\"fields\":[{\"name\":\"ForumID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"UserID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"CourseID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ForumToUser\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToForum\"},{\"name\":\"discussions\",\"kind\":\"object\",\"type\":\"Discussion\",\"relationName\":\"DiscussionToForum\"}],\"dbName\":null},\"Discussion\":{\"fields\":[{\"name\":\"DiscussionID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Attachment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"UserID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ForumID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DiscussionToUser\"},{\"name\":\"forum\",\"kind\":\"object\",\"type\":\"Forum\",\"relationName\":\"DiscussionToForum\"}],\"dbName\":null},\"Request\":{\"fields\":[{\"name\":\"RequestID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"FulfilledDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UserID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"CourseID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RequestToUser\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToRequest\"}],\"dbName\":null},\"Rating\":{\"fields\":[{\"name\":\"UserID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ResourceID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"RatingValue\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RatingToUser\"},{\"name\":\"resource\",\"kind\":\"object\",\"type\":\"Resource\",\"relationName\":\"RatingToResource\"}],\"dbName\":null},\"Flag\":{\"fields\":[{\"name\":\"FlagID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UserID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ResourceID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FlagToUser\"},{\"name\":\"resource\",\"kind\":\"object\",\"type\":\"Resource\",\"relationName\":\"FlagToResource\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

